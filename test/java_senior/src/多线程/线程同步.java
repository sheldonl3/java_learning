package Â§öÁ∫øÁ®ã;

import java.util.concurrent.locks.ReentrantLock;

public class Á∫øÁ®ãÂêåÊ≠• {
    public static void main(String[] args) {
        //Window w = new Window();
        //Window2 w = new Window2();
        Window3 w = new Window3();

        Thread t1 = new Thread(w);
        Thread t2 = new Thread(w);
        Thread t3 = new Thread(w);
        t1.setName("Á™óÂè£1");
        t2.setName("Á™óÂè£2");
        t3.setName("Á™óÂè£3");
        t1.start();
        t2.start();
        t3.start();
    }
}

//3‰∏™Á™óÂè£Âçñ100Âº†Á•®ÔºåÂá∫Áé∞‰∫ÜÈîôÁ•®ÈóÆÈ¢òÔºåÈúÄË¶ÅÂêåÊ≠•Êú∫Âà∂Ëß£ÂÜ≥Á∫øÁ®ãÂÆâÂÖ®ÈóÆÈ¢ò
//ÊñπÂºè‰∏ÄÔºöÂêåÊ≠•‰ª£Á†ÅÂùó
class Window implements Runnable {
    private int tickets = 100;

    Object o = new Object();//ÂΩìüîìÔºåÂ§ö‰∏™Á∫øÁ®ãÂè™Êúâ‰∏Ä‰∏™üîì  ÔºåstaticÂØπË±°‰ΩøÁî®Á±ªÊú¨Ë∫´ÂΩìÈîÅ

    @Override
    public void run() {
        while (true) {
            synchronized (o) {  //synchronized (this) ÂèØ‰ª•Áõ¥Êé•Áî®this,ÁªßÊâøthreadÂ§öÁ∫øÁ®ãÊó∂ÔºåÊÖéÁî®
                if (tickets > 0) {
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                    System.out.println(Thread.currentThread().getName() + "ÂçñÁ•®Ôºöid=" + tickets);
                    tickets--;
                } else {
                    break;
                }
            }
        }
    }
}

//ÊñπÂºè‰∫åÔºöÂêåÊ≠•ÊñπÊ≥ï
class Window2 implements Runnable {
    private int tickets = 100;

    @Override
    public void run() {
        while (true) {
            sell();
        }
    }

    private synchronized void sell() {//ÈªòËÆ§‰ΩøÁî®thisÂΩìÈîÅÔºåstaticÊñπÊ≥ï‰ΩøÁî®Á±ªÊú¨Ë∫´ÂΩìÈîÅ
        if (tickets > 0) {
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            System.out.println(Thread.currentThread().getName() + "ÂçñÁ•®Ôºöid=" + tickets);
            tickets--;
        }
    }
}

//ÊñπÂºè‰∏âÔºölock
class Window3 implements Runnable {
    private int tickets = 100;
    //ÂàõÂª∫lock
    private ReentrantLock lock = new ReentrantLock(true);//true:ÂÖàÊù•ÂêéÂà∞

    @Override
    public void run() {
        while (true) {
            try {
                //ÈîÅÂÆö
                lock.lock();
                if (tickets > 0) {
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                    System.out.println(Thread.currentThread().getName() + "ÂçñÁ•®Ôºöid=" + tickets);
                    tickets--;
                } else {
                    break;
                }
            }finally {
                //Ëß£ÈîÅ
                lock.unlock();
            }
        }
    }
}